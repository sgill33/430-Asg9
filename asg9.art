;TYPEDEFS
define :oneArg [ 
    tag                 
    val
][ 
    init: [
        this\tag: this\tag
        this\val:  this\val
    ]
    compare: 'val
]

define :ifC [
    test
    then
    else
] [ 
    init: [
        this\test: this\test
        this\then: this\then
        this\else: this\else
    ]
]

define :lamC [
    params
    body
] [ 
    init: [
        this\params: this\params
        this\body: this\body
    ]
]

define :appC [
    fun
    args
] [ 
    init: [
        this\fun: this\fun
        this\args: this\args
    ]
]

;FUNCTION DEFS

; Interpreter for OAZO5 language, evaluates an ExprC and Env
; into a Value
interp: function[exp][
    case [exp]
        when?[is? :oneArg exp] [if or? exp\tag = "str" exp\tag = "num" -> return exp\val]
        when?[is? :strC exp] -> return exp\str
        when?[is? :idC exp] -> return exp\val
        when?[is? :ifC exp] -> return exp\then
        when?[is? :lamC exp] -> return exp\body
        when?[is? :appC exp] -> return exp\fun
        else -> [print "Error"]
]

num1: to :oneArg ["num" 34]
str1: to :oneArg ["str" "hello"]

print interp num1
print interp str1

;TESTCASES

; if? interp num1 = 34 [print "Test 1 Passed: " interp num1]
; else [print "Test 1 Failed:" interp num1]

; if? interp str1 = "hello" [print "Test 2 Passed: " interp str1]
; else [print "Test 2 Failed:" interp num1]
